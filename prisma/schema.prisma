datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  email   String  @unique
  name    String
  role    String
  clerkId String  @unique
}

model Product {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  price          Float
  discountedPrice Float?
  sku            String   @unique
  stock          Int
  images         String[]
  categories     String[]
  featured       Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  OrderProduct   OrderProduct[]
  ProductFAQ     ProductFAQ[]
  BundleProduct  BundleProduct[]
}

model FAQ {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  answer    String

  ProductFAQ ProductFAQ[]
}

model ProductFAQ {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  faq       FAQ     @relation(fields: [faqId], references: [id])
  faqId     String  @db.ObjectId
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  products   OrderProduct[]
  total      Float
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model OrderProduct {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  bundleId  String? @db.ObjectId
  bundle    Bundle? @relation(fields: [bundleId], references: [id])
}

model Bundle {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  discountType String  // "percentage" | "fixed" | "buy_x_get_y"
  discountValue Float   // percentage (0-100) or fixed amount
  minQuantity Int      @default(1)
  maxQuantity Int?     // null for unlimited
  isActive    Boolean  @default(true)
  validFrom   DateTime @default(now())
  validUntil  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  BundleProduct BundleProduct[]
  OrderProduct  OrderProduct[]
}

model BundleProduct {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  bundle    Bundle  @relation(fields: [bundleId], references: [id])
  bundleId  String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int     @default(1) // quantity required for this bundle
  isRequired Boolean @default(true) // false for optional items
}
